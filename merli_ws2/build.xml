<?xml version="1.0"?>
<project name="merli_ws_melt" basedir="." default="all">

    <target name="init">

        <property name="web.dir"        location="web" />
        <property name="lib.dir"        location="${web.dir}/WEB-INF/lib" />
        <property name="build.dir"      location="build" />
        <property name="dist.dir"       location="dist" />
        <property name="src.dir"        location="source" />
        <property name="server.config" location="${dist.dir}/config/${server.name}" />

        <property name="debug"          value="on" />
        <property name="deprecation"    value="off" />
        <property name="optimize"       value="on" />

        <!-- WS2 is currently targeted to JVM 1.7 -->
        <property name="ant.build.javac.source" value="1.7"/>
        <property name="ant.build.javac.target" value="1.7"/>
        <property name="ant.build.javac.encoding" value="ISO-8859-15"/>
	
    
    <!-- Patterns -->
	<patternset id="jsps" >
		<include name="*.jsp"/>
		<include name="*.css"/>
		<include name="*.png"/>
		<include name="*.js"/>
	</patternset>
    
    <patternset id="logs" >
      <include name="**/*.log"/>
      <include name="**/*.txt"/>
    </patternset>

         <mkdir dir="${build.dir}"/>
    </target>

    <target name="pro_init">
        <property name="server.name" value="PRO" />
    </target>

    <target name="pre_init">
        <property name="server.name" value="PRE" />
    </target>

    <target name="int_init">
        <property name="server.name" value="INT" />
    </target>


    <!-- =================================================================== -->
  <!-- MAIN                                                                -->
  <!-- =================================================================== -->
    <target name="pro" depends="pro_init,deploy" description="Build development">
        <echo message="***Merli WS creat correctament! production!"/>
    </target>

    <target name="pre" depends="pre_init,deploy" description="Build development">
        <echo message="***IMerli WS creat correctament! acceptation!"/>
    </target>

    <target name="int" depends="int_init,deploy" description="Build development">
        <echo message="***Merli WS creat correctament! integration!"/>
    </target>

    <target name="all" depends="pro, deploy" description="Build everything">
        <echo message="***Merli WS creat correctament!"/>
    </target>


  <!-- =================================================================== -->
  <!-- CLEAN                                                               -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete dir="${build.dir}" />
    <echo message="*** Deleted build directory"/>
  </target>
	
	<!-- =================================================================== -->
	<!-- TO JAR                                                              -->
	<!-- =================================================================== -->
	<target name="to_jar" depends="init">
		<move file="${lib.dir}/activation.aar" tofile="${lib.dir}/activation.jar" verbose="true"/>
		<move file="${lib.dir}/apiSemanticMerli.aar" tofile="${lib.dir}/apiSemanticMerli.jar" verbose="true"/>
		<move file="${lib.dir}/apiSemanticNetv3.1.aar" tofile="${lib.dir}/apiSemanticNetv3.1.jar" verbose="true"/>
		<move file="${lib.dir}/dbconn.aar" tofile="${lib.dir}/dbconn.jar" verbose="true"/>
		<move file="${lib.dir}/dom.aar" tofile="${lib.dir}/dom.jar" verbose="true"/>
		<move file="${lib.dir}/jdom.aar" tofile="${lib.dir}/jdom.jar" verbose="true"/>
		<move file="${lib.dir}/jsp-api.aar" tofile="${lib.dir}/jsp-api.jar" verbose="true"/>
		<move file="${lib.dir}/junit.aar" tofile="${lib.dir}/junit.jar" verbose="true"/>
		<move file="${lib.dir}/log4j-1.2.13.aar" tofile="${lib.dir}/log4j-1.2.13.jar" verbose="true"/>
		<move file="${lib.dir}/mail.aar" tofile="${lib.dir}/mail.jar" verbose="true"/>
		<move file="${lib.dir}/merliBasics.aar" tofile="${lib.dir}/merliBasics.jar" verbose="true"/>
		<move file="${lib.dir}/merliUtils.aar" tofile="${lib.dir}/merliUtils.jar" verbose="true"/>
		<move file="${lib.dir}/ojdbc14.aar" tofile="${lib.dir}/ojdbc14.jar" verbose="true"/>
		<move file="${lib.dir}/saaj-api.aar" tofile="${lib.dir}/saaj-api.jar" verbose="true"/>
		<move file="${lib.dir}/saaj-impl.aar" tofile="${lib.dir}/saaj-impl.jar" verbose="true"/>
		<move file="${lib.dir}/sax.aar" tofile="${lib.dir}/sax.jar" verbose="true"/>
		<move file="${lib.dir}/servlet.aar" tofile="${lib.dir}/servlet.jar" verbose="true"/>
		<move file="${lib.dir}/struts.aar" tofile="${lib.dir}/struts.jar" verbose="true"/>
		<move file="${lib.dir}/xalan.aar" tofile="${lib.dir}/xalan.jar" verbose="true"/>
		<move file="${lib.dir}/xerces.aar" tofile="${lib.dir}/xerces.jar" verbose="true"/>
		<move file="${lib.dir}/xercesImpl.aar" tofile="${lib.dir}/xercesImpl.jar" verbose="true"/>
	    
		<echo message="*** Renombrat de les depenèndies a .jar correctament!"/>
	</target>

	<!-- =================================================================== -->
	<!-- TO AAR                                                              -->
	<!-- =================================================================== -->
	<target name="to_aar" depends="init">
		<move file="${lib.dir}/activation.jar" tofile="${lib.dir}/activation.aar" verbose="true"/>
		<move file="${lib.dir}/apiSemanticMerli.jar" tofile="${lib.dir}/apiSemanticMerli.aar" verbose="true"/>
		<move file="${lib.dir}/apiSemanticNetv3.1.jar" tofile="${lib.dir}/apiSemanticNetv3.1.aar" verbose="true"/>
		<move file="${lib.dir}/dbconn.jar" tofile="${lib.dir}/dbconn.aar" verbose="true"/>
		<move file="${lib.dir}/dom.jar" tofile="${lib.dir}/dom.aar" verbose="true"/>
		<move file="${lib.dir}/jdom.jar" tofile="${lib.dir}/jdom.aar" verbose="true"/>
		<move file="${lib.dir}/jsp-api.jar" tofile="${lib.dir}/jsp-api.aar" verbose="true"/>
		<move file="${lib.dir}/junit.jar" tofile="${lib.dir}/junit.aar" verbose="true"/>
		<move file="${lib.dir}/log4j-1.2.13.jar" tofile="${lib.dir}/log4j-1.2.13.aar" verbose="true"/>
		<move file="${lib.dir}/mail.jar" tofile="${lib.dir}/mail.aar" verbose="true"/>
		<move file="${lib.dir}/merliBasics.jar" tofile="${lib.dir}/merliBasics.aar" verbose="true"/>
		<move file="${lib.dir}/merliUtils.jar" tofile="${lib.dir}/merliUtils.aar" verbose="true"/>
		<move file="${lib.dir}/ojdbc14.jar" tofile="${lib.dir}/ojdbc14.aar" verbose="true"/>
		<move file="${lib.dir}/saaj-api.jar" tofile="${lib.dir}/saaj-api.aar" verbose="true"/>
		<move file="${lib.dir}/saaj-impl.jar" tofile="${lib.dir}/saaj-impl.aar" verbose="true"/>
		<move file="${lib.dir}/sax.jar" tofile="${lib.dir}/sax.aar" verbose="true"/>
		<move file="${lib.dir}/servlet.jar" tofile="${lib.dir}/servlet.aar" verbose="true"/>
		<move file="${lib.dir}/struts.jar" tofile="${lib.dir}/struts.aar" verbose="true"/>
		<move file="${lib.dir}/xalan.jar" tofile="${lib.dir}/xalan.aar" verbose="true"/>
		<move file="${lib.dir}/xerces.jar" tofile="${lib.dir}/xerces.aar" verbose="true"/>
		<move file="${lib.dir}/xercesImpl.jar" tofile="${lib.dir}/xercesImpl.aar" verbose="true"/>
	        
		<echo message="*** Renombrat de les depenèndies a .aar correctament!"/>
	</target>	

  <!-- =================================================================== -->
  <!-- COMPILE                                                                -->
  <!-- =================================================================== -->
  <target name="compile" depends="init">
  	
  	<ant target="to_jar"/>
  	
    <mkdir dir="${build.dir}/WEB-INF/classes"/>
    <javac destdir="${build.dir}/WEB-INF/classes" 
    	   excludes="edu/xtec/merli/ws/test/**"
           debug="${debug}" 
           deprecation="${deprecation}"
           optimize="${optimize}" 
		   encoding="${ant.build.javac.encoding}"
		   source="${ant.build.javac.source}"
    	   target="${ant.build.javac.target}"
    includeantruntime="false">
      <src path="${src.dir}"/>
      <classpath>
        <pathelement location="${lib.dir}/servlet.jar"/>
        <pathelement location="${lib.dir}/junit.jar"/>
        <pathelement location="${lib.dir}/jsp-api.jar"/>
      	<pathelement location="${lib.dir}/activation.jar"/>
      	<pathelement location="${lib.dir}/apiSemanticMerli.jar"/>
      	<pathelement location="${lib.dir}/apiSemanticNetv3.1.jar"/>
        <pathelement location="${lib.dir}/dbconn.jar"/>
      	<pathelement location="${lib.dir}/dom.jar"/>
      	<pathelement location="${lib.dir}/jdom.jar"/>
        <pathelement location="${lib.dir}/log4j-1.2.13.jar"/>
      	<pathelement location="${lib.dir}/mail.jar"/>
      	<pathelement location="${lib.dir}/merliBasics.jar"/>
      	<pathelement location="${lib.dir}/merliUtils.jar"/>
        <pathelement location="${lib.dir}/ojdbc14.jar"/>
      	<pathelement location="${lib.dir}/saaj-api.jar"/>
      	<pathelement location="${lib.dir}/saaj-impl.jar"/>
      	<pathelement location="${lib.dir}/sax.jar"/>
      	<pathelement location="${lib.dir}/struts.jar"/>
      	<pathelement location="${lib.dir}/xalan.jar"/>
      	<pathelement location="${lib.dir}/xerces.jar"/>
      	<pathelement location="${lib.dir}/xercesImpl.jar"/>
      </classpath>
    </javac>
  	
  	<ant target="to_aar"/>
  	
  </target>


  <!-- =================================================================== -->
  <!-- BUILD                                                                -->
  <!-- =================================================================== -->
	 <target name="build" depends="compile">
	  </target>	
	
   <target name="dist" depends="build">
   	
   	<ant target="to_jar"/>
   	
   <copy todir="${build.dir}">
        <fileset dir="web" includes= "semanticNetv3.xsd" />
    </copy>
    <war destfile="${build.dir}/merli_ws2.war"
         webxml="${web.dir}/WEB-INF/web.xml">

         <manifest>
           <attribute name="Built-By"
                      value="${user.name}"/>
        </manifest>
        <lib dir="${lib.dir}">
            <include name="activation.jar"/>
            <include name="apiSemanticMerli.jar"/>
            <include name="apiSemanticNetv3.1.jar"/>
            <include name="dbconn.jar"/>
            <include name="dom.jar"/>
            <include name="jdom.jar"/>
            <include name="log4j-1.2.13.jar"/>
            <include name="mail.jar"/>
            <include name="merliBasics.jar"/>
            <include name="merliUtils.jar"/>
               <include name="ojdbc14.jar"/>
               <include name="saaj-api.jar"/>
               <include name="saaj-impl.jar"/>
               <include name="sax.jar"/>
            <include name="struts.jar"/>
            <include name="xalan.jar"/>
            <include name="xerces.jar"/>
            <include name="xercesImpl.jar"/>
        </lib>

        <classes dir="${build.dir}" prefix=""/>
        <zipfileset dir="${server.config}" prefix="WEB-INF/classes">
            <patternset includes="log4j.properties"/>
            <patternset includes="database.properties"/>
            <patternset includes="ws.properties"/>
            <patternset includes="semanticnet.properties"/>
        </zipfileset>
        <zipfileset dir="${server.config}" prefix="">
            <patternset includes="WSDLMerli.wsdl"/>
            <patternset includes="WSXtecTypes1.5.xsd"/>
        </zipfileset>

    </war>
   	
   	<ant target="to_aar"/>
   	
  </target>

  <target name="deploy" depends="dist">
      <mkdir dir="${dist.dir}/${server.name}"/>
    <ear destfile="${dist.dir}/${server.name}/merli_ws2.ear"
         appxml="${web.dir}/WEB-INF/application.xml">
         <manifest>
           <attribute name="Built-By"
                      value="${user.name}"/>
         </manifest>
      <fileset dir="${build.dir}" includes="merli_ws2.war"/>
    </ear>
    <delete dir="${build.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- MERLI WS LIB                                                        -->
  <!-- =================================================================== -->
  <target name="merliWS2.jar" depends="compile">
    <delete dir="${build.dir}/ws"/>
    <mkdir dir="${build.dir}/ws"/>

	<copy todir="${build.dir}/ws">
    	<fileset dir="${build.dir}/WEB-INF/classes" includes="edu/xtec/merli/**/*.class"/>
    </copy>

    <jar jarfile="${dist.dir}/merliWS2.jar" basedir="${build.dir}/ws" />
      <copy file="${dist.dir}/merliWS2.jar" tofile="../merli_harvesting/web/WEB-INF/lib/merliWS2.aar"/>
    <delete dir="${build.dir}"/>
  </target>
	
</project>

