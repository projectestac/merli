<?xml version="1.0"?>
<project name="merli_ws_melt" basedir="." default="all">

  <property name="web.dir"        location="web" />
  <property name="lib.dir"        location="${web.dir}/WEB-INF/lib" />
  <property name="build.dir"      location="build" />
  <property name="dist.dir"       location="dist" />
	
  <!-- DUC is currently targeted to JVM 1.7 -->
  <property name="ant.build.javac.source" value="1.7"/>
  <property name="ant.build.javac.target" value="1.7"/>	
  <property name="ant.build.javac.encoding" value="ISO-8859-15"/>	
	
    
    <!-- Patterns -->
	<patternset id="jsps" >
		<include name="*.jsp"/>
		<include name="*.css"/>
		<include name="*.png"/>
		<include name="*.js"/>
	</patternset>
    <patternset id="props" >
      <include name="**/*.properties"/>
    </patternset>
    
    <patternset id="logs" >
      <include name="**/*.log"/>
      <include name="**/*.txt"/>
    </patternset>
	
  <!-- =================================================================== -->
  <!-- MAIN                                                                -->
  <!-- =================================================================== -->
  <target name="all" depends="deploy">
    <echo message="***Merli WS has been built correctly!"/>
  </target>

  <!-- =================================================================== -->
  <!-- INIT                                                                -->
  <!-- =================================================================== -->
  <target name="init" depends="clean">  
    <!-- Variables -->
    <property name="src.dir"        location="source" />

    <property name="debug"          value="on" />    
    <property name="deprecation"    value="off" />    
    <property name="optimize"       value="on" />    
    
    <!-- Create dirs -->
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${build.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- CLEAN                                                               -->
  <!-- =================================================================== -->
  <target name="clean">
    <delete dir="${build.dir}" />
    <echo message="*** Deleted build directory"/>
  </target>

  <!-- =================================================================== -->
  <!-- COMPILE                                                                -->
  <!-- =================================================================== -->
  <target name="compile" depends="init">
    <mkdir dir="${build.dir}/WEB-INF/classes"/>
    <javac destdir="${build.dir}/WEB-INF/classes" 
    	   excludes="edu/xtec/merli/ws/test/**"
           debug="${debug}" 
           deprecation="${deprecation}"
           optimize="${optimize}" 
		   encoding="${ant.build.javac.encoding}"
		   source="${ant.build.javac.source}"
    	   target="${ant.build.javac.target}"
    includeantruntime="false">
      <src path="${src.dir}"/>
      <classpath>
        <pathelement location="${lib.dir}/servlet.jar"/>
        <pathelement location="${lib.dir}/junit.jar"/>
        <pathelement location="${lib.dir}/jsp-api.jar"/>
      	<pathelement location="${lib.dir}/activation.jar"/>
      	<pathelement location="${lib.dir}/apiSemanticMerli.jar"/>
      	<pathelement location="${lib.dir}/apiSemanticNetv3.1.jar"/>
        <pathelement location="${lib.dir}/dbconn.jar"/>
      	<pathelement location="${lib.dir}/dom.jar"/>
      	<pathelement location="${lib.dir}/jdom.jar"/>
        <pathelement location="${lib.dir}/log4j-1.2.13.jar"/>
      	<pathelement location="${lib.dir}/mail.jar"/>
      	<pathelement location="${lib.dir}/merliBasics.jar"/>
      	<pathelement location="${lib.dir}/merliUtils.jar"/>
        <pathelement location="${lib.dir}/ojdbc14.jar"/>
      	<pathelement location="${lib.dir}/saaj-api.jar"/>
      	<pathelement location="${lib.dir}/saaj-impl.jar"/>
      	<pathelement location="${lib.dir}/sax.jar"/>
      	<pathelement location="${lib.dir}/struts.jar"/>
      	<pathelement location="${lib.dir}/xalan.jar"/>
      	<pathelement location="${lib.dir}/xerces.jar"/>
      	<pathelement location="${lib.dir}/xercesImpl.jar"/>
      </classpath>
    </javac>
  </target>


  <!-- =================================================================== -->
  <!-- BUILD                                                                -->
  <!-- =================================================================== -->
	 <target name="build" depends="compile">
	  </target>	
	
   <target name="dist" 
          depends="build">
	<copy todir="${build.dir}">
		<fileset dir="web" includes="*.wsdl"/>
		<fileset dir="web" includes="*.xsd"/>
	</copy>
    <war destfile="${build.dir}/merli_ws2.war" 
         webxml="${web.dir}/WEB-INF/web.xml">
    	
         <manifest>
           <attribute name="Built-By" 
                      value="${user.name}"/>
        </manifest>
        <lib dir="${lib.dir}">
            <include name="activation.jar"/>
        	<include name="apiSemanticMerli.jar"/>
        	<include name="apiSemanticNetv3.1.jar"/>
            <include name="dbconn.jar"/>
            <include name="dom.jar"/>
            <include name="jdom.jar"/>
        	<include name="log4j-1.2.13.jar"/>
            <include name="mail.jar"/>
        	<include name="merliBasics.jar"/>
        	<include name="merliUtils.jar"/>
           	<include name="ojdbc14.jar"/>
           	<include name="saaj-api.jar"/>
           	<include name="saaj-impl.jar"/>
           	<include name="sax.jar"/>
            <include name="struts.jar"/>
            <include name="xalan.jar"/>
            <include name="xerces.jar"/>
            <include name="xercesImpl.jar"/>
		</lib>
    	
		<classes dir="${build.dir}" prefix=""/>
		<zipfileset dir="${src.dir}" prefix="WEB-INF/classes">
			<patternset refid="props"/>
		</zipfileset>
    </war>
  </target>
  
  <target name="deploy"
  		  depends="dist">
    <ear destfile="${dist.dir}/merli_ws2.ear" 
         appxml="${web.dir}/WEB-INF/application.xml">
         <manifest>
           <attribute name="Built-By" 
                      value="${user.name}"/>
         </manifest>
      <fileset dir="${build.dir}" includes="merli_ws2.war"/>
    </ear>
    <delete dir="${build.dir}"/>
  </target>
	
  <!-- =================================================================== -->
  <!-- MERLI WS LIB                                                        -->
  <!-- =================================================================== -->
  <target name="merliWS2.jar" depends="compile">
    <delete dir="${build.dir}/ws"/>
    <mkdir dir="${build.dir}/ws"/>

	<copy todir="${build.dir}/ws">
    	<fileset dir="${build.dir}/WEB-INF/classes" includes="edu/xtec/merli/**/*.class"/>
    </copy>
	<!--copy todir="${build.dir}/ws">
    	<fileset dir="${src.dir}" includes="**/database.properties,**/log4j.properties"/>
    </copy-->
    <jar jarfile="${dist.dir}/merliWS2.jar" basedir="${build.dir}/ws" />
    <delete dir="${build.dir}"/>
  </target>
	
</project>

